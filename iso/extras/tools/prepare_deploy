#!/bin/bash
#set -o xtrace
function find_base_dir {
    local real_path=$(python -c "import os;print(os.path.realpath('$0'))")
    BASEDIR="$(dirname ${real_path})"
}

function usage {
   cat <<EOF
Usage: $0 COMMAND [options]
Options:
   --inventory, -i <inventory_path>
   --playbook, -p <playbook_path>
   --configdir <config_path>
   --help, -h
   --tags, -t <tags>
   --extra, -e <ansible variables>
   --passwords <passwords_path>
   --verbose, -v
Commands:
   genrate_settings
   precheck_settings
   prepare_deploy
EOF
}

function process_cmd {
    echo "$ACTION : $CMD"
    $CMD
    if [[ $? -ne 0 ]];then
        echo "Command failed $CMD"
        exit 1
    fi
}

SHORT_OPTS="hi:p:t:k:e:v"
LONG_OPTS="help,inventory:,playbook:,tags:,key:,extra:,verbose,configdir:,passwords:,yes-i-really-really-mean-it,include-images"
ARGS=$(getopt -o "${SHORT_OPTS}" -l "${LONG_OPTS}" --name "$0" -- "$@") || { usage >&2; exit 2; }

eval set -- "$ARGS"

find_base_dir

INVENTORY="${BASEDIR}/ansible/inventory/default"
PLAYBOOK="${BASEDIR}/ansible/site.yml"
VERBOSITY=
EXTRA_OPTS=${EXTRA_OPTS}
CONFIG_DIR="${BASEDIR}/etc/pre_deploy/"
PASSWORDS_FILE="${CONFIG_DIR}/passwords.yml"
DANGER_CONFIRM=
INCLUDE_IMAGES=

while [ "$#" -gt 0 ];do
    case "$1" in

    (--inventory|-i)
        INVENTORY="$2"
        shift 2
        ;;

    (--playbook|-p)
            PLAYBOOK="$2"
            shift 2
            ;;

    (--tags|-t)
        EXTRA_OPTS="$EXTRA_OPTS --tags $2"
        shift 2
        ;;
   
    (--verbose|-v)
        VERBOSITY="$VERBOSITY --verbose"
        shift 1
        ;;
     
    (--configdir)
        CONFIG_DIR="$2"
        shift 2
        ;;
     
    (--key |-k)
        VAULT_PASS_FILE="$2"
        EXTRA_OPTS="$EXTRA_OPTS --vault-password-file=$VAULT_PASS_FILE"
        shift 2
        ;;

     (--extra|-e)
        EXTRA_OPTS="$EXTRA_OPTS -e $2"
        shift 2
        ;;
     
     (--passwords)
            PASSWORDS_FILE="$2"
            shift 2
            ;;
     (--help|-h)
        usage
        shift
        exit 0
        ;;

      (--)
        shift
        break
        ;;
      (*)
        echo "error"
        exit 3
        ;;
esac
done

case "$1" in 
(genrate_settings)
       ACTION="set base config"
       EXTRA_OPTS="$EXTRA_OPTS -e action=genrate_settings"
       PLAYBOOK="${BASEDIR}/ansible/genrate_settings.yml"
       ;;
(precheck_settings)
       ACTION="Pre-deployment checking"
       EXTRA_OPTS="$EXTRA_OPTS -e action=precheck_settings"
       PLAYBOOK="${BASEDIR}/ansible/precheck_settings.yml"
       ;;
(prepare_deploy)
       ACTION="prepare for Deploying"
       PLAYBOOK="${BASEDIR}/ansible/prepare_deploy.yml"
       EXTRA_OPTS="$EXTRA_OPTS -e action=prepare_deploy"
       PLAYBOOK="${BASEDIR}/ansible/prepare_deploy.yml"
       ;;
(*)    usage
       exit 0
       ;;
esac
   

CONFIG_OPTS="-e @${PASSWORDS_FILE} -e @${CONFIG_DIR}/global.yml -e CONFIG_DIR=${CONFIG_DIR}"
CMD="ansible-playbook -i $INVENTORY $CONFIG_OPTS $EXTRA_OPTS $PLAYBOOK $VERBOSITY"
process_cmd
